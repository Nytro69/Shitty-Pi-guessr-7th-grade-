import csv
import os

pi = [
    1, 4, 1, 5, 9, 2, 6, 5, 3, 5, 8, 9, 7, 9, 3, 2, 3, 8, 4,
    6, 2, 6, 4, 3, 3, 8, 3, 2, 7, 9, 5, 0, 2, 8, 8, 4, 1, 9, 7,
    1, 6, 9, 3, 9, 9, 3, 7, 5, 1, 0, 5, 8, 2, 0, 9, 7, 4, 9, 4,
    4, 5, 9, 2, 3, 0, 7, 8, 1, 6, 4, 0, 6, 2, 8, 6, 2, 0, 8, 9,
    9, 8, 6, 2, 8, 0, 3, 4, 8, 2, 5, 3, 4, 2, 1, 1, 7, 0, 6, 7,
    9, 8, 2, 1, 4, 8, 0, 8, 6, 5, 1, 3, 2, 8, 2, 3, 0, 6, 6, 4,
    7, 0, 9, 3, 8, 4, 4, 6, 0, 9, 5, 5, 0, 5, 8, 2, 2, 3, 1, 7,
    2, 5, 3, 5, 9, 4, 0, 8, 1, 2, 8, 4, 8, 1, 1, 1, 7, 4, 5, 0,
    2, 8, 4, 1, 0, 2, 7, 0, 1, 9, 3, 8, 5, 2, 1, 1, 0, 5, 5, 5,
    9, 6, 4, 4, 6, 2, 2, 9, 4, 8, 9, 5, 4, 9, 3, 0, 3, 8, 1, 9,
    6, 4, 4, 2, 8, 8, 1, 0, 9, 7, 5, 6, 6, 5, 9, 3, 3, 4, 4, 6
]

os.system('clear')

def write():
    name = input("Name: ")
    print(">> 3.")
    score = 0
    for i in range(len(pi)):
        guess = input(">> ")
        guess = int(guess)
        if guess == pi[i]:
            score += 1
        else:
            break

    with open("pi_leaderboard.csv", "a", newline='') as csvfile:
        fieldnames = ['Name', 'Score']
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
        writer.writerow({'Name': name, 'Score': score})

    # Print high score and highest scorer's name
    high_score, high_scorer = get_high_score()
    if score == high_score:
        print(f"Congratulations!! New record by {name} with {score} digits")

    else:
        print(f"\nWrong, the next digit was: {pi[score]}\n\nYour score was: {score}\n")
    print(f"Record: {high_score}, Record holder: {high_scorer}")

def get_high_score():

    with (open("pi_leaderboard.csv", "r") as csvfile):
        reader = csv.reader(csvfile)
        rows = []
        for row in reader:
            rows.append(row)


    high = 0
    highest_scorer = ""
    scorers = []

    for i in range(2, len(rows)):
        if int(rows[i][1]) > high:
            high = int(rows[i][1])
            highest_scorer = rows[i][0]
            scorers = [highest_scorer] # reset scores if another score is higher
        elif int(rows[i][1]) == high:
            scorers.append(rows[i][0])

    if len(scorers) > 0:
        s = ', '.join(scorers)
        return high, s
    else:
        return high, highest_scorer

write()
